load("@tensorstore//bazel:utils.bzl", "package_relative_path")
load("@bazel_skylib//lib:selects.bzl", "selects")

package(default_visibility = ["//visibility:public"])

ZSTD_SRCS = glob(
    [
        "lib/*.h",
        "lib/common/*.h",
        "lib/common/*.c",
        "lib/compress/*.h",
        "lib/compress/*.c",
        "lib/decompress/*.h",
        "lib/decompress/*.c",
    ],
    exclude = ["lib/zstd.h"],
)

LOCAL_DEFINES = [
    "XXH_NAMESPACE=ZSTD_",
] + select({
    ":zstd_asm_supported": [],
    "//conditions:default": ["ZSTD_DISABLE_ASM=1"],
})

cc_library(
    name = "zstdlib",
    srcs = ZSTD_SRCS +
           select({
               ":zstd_asm_supported": ["lib/decompress/huf_decompress_amd64.S"],
               "//conditions:default": [],
           }),
    hdrs = ["lib/zstd.h"],
    copts = ["-I" + package_relative_path("lib/common")],
    defines = [
        # Since this rule is used to build a static library, prevent ZSTD from
        # overriding global `-fvisibility=hidden` setting.
        "ZSTDLIB_VISIBLE=",
        "ZSTDLIB_HIDDEN=",
    ],
    local_defines = LOCAL_DEFINES,
    strip_include_prefix = "lib",
)

# Config settings

# See common/portability_macros.h for ZSTD ASM detection.
# Requires  gcc/clang, and linux or apple.
selects.config_setting_group(
    name = "zstd_asm_supported",
    match_any = [
        ":linux_x86_64_clang",
        ":linux_x86_64_gcc",
        ":macos_x86_64",
    ],
)

[
    alias(
        name = name,
        actual = "@tensorstore//:{target}".format(target = name),
    )
    for name in [
        "linux_x86_64_clang",
        "linux_x86_64_gcc",
        "macos_x86_64",
    ]
]
