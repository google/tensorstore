# Additional targets for bazel_to_cmake to generate:
#
# bazel_to_cmake doesn't have a global view of targets, it cannot lazy load
# dependencies or apply aspects to, for example, collect the proto_library()
# targets that are referenced by other reposotories.
#
# Therefore some targets (particularly protos) must exist in each reposoitory
# where they might be referenced.
#
# Also, bazel_to_cmake target rule generation *does not enforce* that rule
# names must be in the same package, so we can add them all here without
# patching the repository.

load(
    "@com_google_protobuf_upb//bazel:upb_proto_library.bzl",
    "upb_proto_library",
    "upb_proto_reflection_library",
)

WELL_KNOWN_TYPES = [
    "any",
    "api",
    "duration",
    "empty",
    "field_mask",
    "source_context",
    "struct",
    "timestamp",
    "type",
    "wrappers",
]

[
    upb_proto_library(
        name = "//src/google/protobuf:" + x + "_upb_proto",
        deps = ["//src/google/protobuf:" + x + "_proto"],
    )
    for x in WELL_KNOWN_TYPES + ["descriptor"]
]

[
    upb_proto_reflection_library(
        name = "//src/google/protobuf:" + x + "_upb_proto_reflection",
        deps = ["//src/google/protobuf:" + x + "_proto"],
    )
    for x in WELL_KNOWN_TYPES + ["descriptor"]
]

# Also build the bootstrao well-known-proto targets, as the protobuf
# CMake build usually does

cc_library(
    name = "b2cmake_wkt_cc_proto",
    srcs = ["src/google/protobuf/" + wkt + ".pb.cc" for wkt in WELL_KNOWN_TYPES],
    hdrs = ["src/google/protobuf/" + wkt + ".pb.h" for wkt in WELL_KNOWN_TYPES],
    includes = ["src"],
    strip_include_prefix = "src",
    deps = ["//src/google/protobuf:protobuf_nowkt"],
)
