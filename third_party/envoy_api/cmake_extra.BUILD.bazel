# Additional targets for bazel_to_cmake to generate:
#
# bazel_to_cmake doesn't have a global view of targets, it cannot lazy load
# dependencies or apply aspects to, for example, collect the proto_library()
# targets that are referenced by other reposotories.
#
# Therefore some targets (particularly protos) must exist in each reposoitory
# where they might be referenced.
#
# Also, bazel_to_cmake target rule generation *does not enforce* that rule
# names must be in the same package, so we can add them all here without
# patching the repository.

load(
    "@com_google_protobuf_upb//bazel:upb_proto_library.bzl",
    "upb_proto_library",
    "upb_proto_reflection_library",
)

_PACKAGES = [
    "//envoy/admin/v3",
    "//envoy/config/cluster/v3",
    "//envoy/config/core/v3",
    "//envoy/config/endpoint/v3",
    "//envoy/config/listener/v3",
    "//envoy/config/rbac/v3",
    "//envoy/config/route/v3",
    "//envoy/extensions/clusters/aggregate/v3",
    "//envoy/extensions/filters/common/fault/v3",
    "//envoy/extensions/filters/http/fault/v3",
    "//envoy/extensions/filters/http/rbac/v3",
    "//envoy/extensions/filters/http/router/v3",
    "//envoy/extensions/filters/http/stateful_session/v3",
    "//envoy/extensions/filters/network/http_connection_manager/v3",
    "//envoy/extensions/http/stateful_session/cookie/v3",
    "//envoy/extensions/load_balancing_policies/client_side_weighted_round_robin/v3",
    "//envoy/extensions/load_balancing_policies/common/v3",
    "//envoy/extensions/load_balancing_policies/ring_hash/v3",
    "//envoy/extensions/load_balancing_policies/wrr_locality/v3",
    "//envoy/extensions/transport_sockets/tls/v3",
    "//envoy/service/discovery/v3",
    "//envoy/service/load_stats/v3",
    "//envoy/service/status/v3",
    "//envoy/type/http/v3",
    "//envoy/type/matcher/v3",
    "//envoy/type/v3",
]

[
  upb_proto_library(
    name = x + ":pkg_upb_proto",
    deps = [x + ":pkg"],
  ) for x in _PACKAGES
]

[
  upb_proto_reflection_library(
    name = x + ":pkg_upb_proto_reflection",
    deps = [ x + ":pkg"],
  ) for x in _PACKAGES
]
