package(default_visibility = ["//visibility:private"])

licenses(["notice"])

exports_files(["LICENSE"])

WEBP_DEFINES = select({
    "@platforms//cpu:x86_64": [
        "WEBP_HAVE_SSE41",
        "WEBP_HAVE_AVX2",
    ],
    "@platforms//cpu:aarch64": ["WEBP_HAVE_NEON"],
    "//conditions:default": [],
})

cc_library(
    name = "webp",
    hdrs = [
        "src/webp/decode.h",
        "src/webp/encode.h",
        "src/webp/format_constants.h",
        "src/webp/mux_types.h",
        "src/webp/types.h",
        "src/webp/demux.h",
        "src/webp/mux.h",
    ],
    srcs = [
        "src/demux/anim_decode.c",
        "src/demux/demux.c",
        "src/mux/anim_encode.c",
        "src/mux/muxedit.c",
        "src/mux/muxinternal.c",
        "src/mux/muxread.c",
        "src/mux/animi.h",
        "src/mux/muxi.h",
    ],
    includes = ["src"],
    visibility = ["//visibility:public"],
    implementation_deps = [
        ":dec",
        ":dsp",
        ":enc",
        ":sharpyuv",
        ":utils_dec",
        ":utils",
    ],
    local_defines = WEBP_DEFINES,
)

####################################################################################

WEBP_C89_FLAGS = select({
    "@rules_cc//cc/compiler:msvc-cl": [],
    "//conditions:default": [
        "-Wvla",
        "-Werror=vla",
        "-Wstrict-prototypes",
        "-Wold-style-definition",
        "-Wmissing-prototypes",
        "-Wmissing-declarations",
        "-Wdeclaration-after-statement",
        "-Wextra",
        "-Wshadow",
        "-Wsign-compare",
        "-Wno-implicit-fallthrough",
    ],
})

_UTILS_EXTRA = [
    "src/dsp/cpu.h",
    "src/dsp/dsp.h",
    "src/dsp/lossless_common.h",
    "src/webp/encode.h",
    "src/webp/format_constants.h",
    "src/webp/types.h",
]

cc_library(
    name = "utils_dec",
    defines = WEBP_DEFINES,
    copts = WEBP_C89_FLAGS,
    srcs = [
        "src/utils/bit_reader_utils.c",
        "src/utils/color_cache_utils.c",
        "src/utils/filters_utils.c",
        "src/utils/huffman_utils.c",
        "src/utils/palette.c",
        "src/utils/quant_levels_dec_utils.c",
        "src/utils/random_utils.c",
        "src/utils/rescaler_utils.c",
        "src/utils/thread_utils.c",
        "src/utils/utils.c",
    ] + _UTILS_EXTRA,
    hdrs = [
        "src/utils/bit_reader_inl_utils.h",
        "src/utils/bit_reader_utils.h",
        "src/utils/color_cache_utils.h",
        "src/utils/endian_inl_utils.h",
        "src/utils/filters_utils.h",
        "src/utils/huffman_utils.h",
        "src/utils/palette.h",
        "src/utils/quant_levels_dec_utils.h",
        "src/utils/random_utils.h",
        "src/utils/rescaler_utils.h",
        "src/utils/thread_utils.h",
        "src/utils/utils.h",
    ],
)

cc_library(
    name = "utils",
    local_defines = WEBP_DEFINES,
    copts = WEBP_C89_FLAGS,
    srcs = [
        "src/utils/bit_writer_utils.c",
        "src/utils/huffman_encode_utils.c",
        "src/utils/quant_levels_utils.c",
    ] + _UTILS_EXTRA,
    hdrs = [
        "src/utils/bit_writer_utils.h",
        "src/utils/huffman_encode_utils.h",
        "src/utils/quant_levels_utils.h",
    ],
    deps = [
        ":utils_dec",
    ],
)

cc_library(
    name = "headers_internal",
    hdrs = glob(["src/**/*.h"]),
)

# src/dec
cc_library(
    name = "dec",
    local_defines = WEBP_DEFINES,
    copts = WEBP_C89_FLAGS,
    srcs = [
        "src/dec/alpha_dec.c",
        "src/dec/buffer_dec.c",
        "src/dec/frame_dec.c",
        "src/dec/idec_dec.c",
        "src/dec/io_dec.c",
        "src/dec/quant_dec.c",
        "src/dec/tree_dec.c",
        "src/dec/vp8_dec.c",
        "src/dec/vp8l_dec.c",
        "src/dec/webp_dec.c",
    ],
    deps = [
        ":utils_dec",
        ":dsp",
        ":headers_internal",
    ],
)

cc_library(
    name = "enc",
    local_defines = WEBP_DEFINES,
    copts = WEBP_C89_FLAGS,
    srcs = [
        "src/enc/alpha_enc.c",
        "src/enc/analysis_enc.c",
        "src/enc/backward_references_cost_enc.c",
        "src/enc/backward_references_enc.c",
        "src/enc/config_enc.c",
        "src/enc/cost_enc.c",
        "src/enc/filter_enc.c",
        "src/enc/frame_enc.c",
        "src/enc/histogram_enc.c",
        "src/enc/iterator_enc.c",
        "src/enc/near_lossless_enc.c",
        "src/enc/picture_enc.c",
        "src/enc/picture_csp_enc.c",
        "src/enc/picture_psnr_enc.c",
        "src/enc/picture_rescale_enc.c",
        "src/enc/picture_tools_enc.c",
        "src/enc/predictor_enc.c",
        "src/enc/quant_enc.c",
        "src/enc/syntax_enc.c",
        "src/enc/token_enc.c",
        "src/enc/tree_enc.c",
        "src/enc/vp8l_enc.c",
        "src/enc/webp_enc.c",
    ],
    deps = [
        ":sharpyuv",
        ":utils",
        ":dsp",
        ":headers_internal",
    ],
)

####################################################################################

# src/dsp
cc_library(
    name = "dsp",
    local_defines = WEBP_DEFINES,
    copts = WEBP_C89_FLAGS,
    srcs = [
        "src/dsp/alpha_processing.c",
        "src/dsp/cost.c",
        "src/dsp/cpu.c",
        "src/dsp/dec_clip_tables.c",
        "src/dsp/dec.c",
        "src/dsp/enc.c",
        "src/dsp/filters.c",
        "src/dsp/lossless_enc.c",
        "src/dsp/lossless.c",
        "src/dsp/rescaler.c",
        "src/dsp/ssim.c",
        "src/dsp/upsampling.c",
        "src/dsp/yuv.c",
    ],
    deps = [":headers_internal"] + select({
        "@platforms//cpu:aarch64": [":dsp_neon"],
        "@platforms//cpu:x86_64": [
            ":dsp_sse2",
            ":dsp_sse41",
            ":dsp_avx2",
        ],
        "//conditions:default": [],
    }),
)

cc_library(
    name = "dsp_sse2",
    srcs = glob(["src/dsp/*_sse2.c"]),
    local_defines = WEBP_DEFINES,
    target_compatible_with = [
        "@platforms//cpu:x86_64",
    ],
    copts = WEBP_C89_FLAGS + select({
        "@rules_cc//cc/compiler:msvc-cl": ["/arch:SSE2"],
        "//conditions:default": ["-msse2"],
    }),
    deps = [":headers_internal"],
)

cc_library(
    name = "dsp_sse41",
    srcs = glob(["src/dsp/*_sse41.c"]),
    local_defines = WEBP_DEFINES,
    target_compatible_with = [
        "@platforms//cpu:x86_64",
    ],
    copts = WEBP_C89_FLAGS + select({
        # MSVC has no dedicated sse4.1 flag
        # https://learn.microsoft.com/en-us/cpp/build/reference/arch-x86?view=msvc-170
        "@rules_cc//cc/compiler:msvc-cl": ["/arch:AVX"],
        "//conditions:default": ["-msse4.1"],
    }),
    deps = [":headers_internal"],
)

cc_library(
    name = "dsp_avx2",
    srcs = glob(["src/dsp/*_avx2.c"]),
    local_defines = WEBP_DEFINES,
    copts = WEBP_C89_FLAGS + select({
        "@rules_cc//cc/compiler:msvc-cl": ["/arch:AVX2"],
        "//conditions:default": ["-mavx2"],
    }),
    target_compatible_with = [
        "@platforms//cpu:x86_64",
    ],
    deps = [":headers_internal"],
)

cc_library(
    name = "dsp_neon",
    local_defines = WEBP_DEFINES,
    srcs = glob(["src/dsp/*_neon.c"]),
    target_compatible_with = ["@platforms//cpu:aarch64"],
    deps = [":headers_internal"],
    copts = WEBP_C89_FLAGS,
)

####################################################################################
# sharpyuv

cc_library(
    name = "sharpyuv",
    local_defines = WEBP_DEFINES,
    srcs = [
        "sharpyuv/sharpyuv.c",
        "sharpyuv/sharpyuv_cpu.c",
        "sharpyuv/sharpyuv_csp.c",
        "sharpyuv/sharpyuv_dsp.c",
        "sharpyuv/sharpyuv_gamma.c",
        "sharpyuv/sharpyuv_dsp.h",
        "sharpyuv/sharpyuv_cpu.h",
    ],
    hdrs = [
        "sharpyuv/sharpyuv.h",
        "sharpyuv/sharpyuv_csp.h",
        "sharpyuv/sharpyuv_gamma.h",
    ],
    deps = [
        ":sharpyuv_hdrs",
    ] + select({
        "@platforms//cpu:aarch64": [":sharpyuv_neon"],
        "@platforms//cpu:x86_64": [
            ":sharpyuv_sse2",
        ],
        "//conditions:default": [],
    }),
    copts = WEBP_C89_FLAGS,
)

cc_library(
    name = "sharpyuv_hdrs",
    hdrs = [
        "sharpyuv/sharpyuv.h",
        "sharpyuv/sharpyuv_cpu.h",
        "sharpyuv/sharpyuv_csp.h",
        "sharpyuv/sharpyuv_dsp.h",
        "sharpyuv/sharpyuv_gamma.h",
        "src/dsp/cpu.h",
        "src/webp/types.h",
    ],
    textual_hdrs = [
        "src/dsp/cpu.c",
    ],
)

cc_library(
    name = "sharpyuv_sse2",
    local_defines = WEBP_DEFINES,
    srcs = glob(["sharpyuv/*_sse2.c"]),
    target_compatible_with = [
        "@platforms//cpu:x86_64",
    ],
    copts = WEBP_C89_FLAGS + select({
        "@rules_cc//cc/compiler:msvc-cl": ["/arch:SSE2"],
        "//conditions:default": ["-msse2"],
    }),
    deps = [":sharpyuv_hdrs"],
)

cc_library(
    name = "sharpyuv_neon",
    local_defines = WEBP_DEFINES,
    srcs = glob(["sharpyuv/*_neon.c"]),
    target_compatible_with = ["@platforms//cpu:aarch64"],
    deps = [":sharpyuv_hdrs"],
    copts = WEBP_C89_FLAGS,
)
