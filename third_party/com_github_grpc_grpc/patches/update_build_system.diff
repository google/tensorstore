# Copyright 2022 The TensorStore Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# NOTE: The second patch to includes has no change, but is intended to signal
# whether we still need a workaround in bazel_to_cmake/emit_cc.py
#
diff -Nur a/BUILD b/BUILD
--- a/BUILD	2024-04-25 23:05:05
+++ b/BUILD	2024-05-02 10:49:18
@@ -23,6 +23,8 @@
     "grpc_upb_proto_library",
     "grpc_upb_proto_reflection_library",
     "python_config_settings",
+    "if_windows",
+    "if_mingw",
 )
 
 licenses(["reciprocal"])
@@ -220,6 +222,13 @@
 )
 
 config_setting(
+    name = "mingw-gcc",
+    flag_values = {
+        "@bazel_tools//tools/cpp:compiler": "mingw-gcc",
+    },
+)
+
+config_setting(
     name = "mac_x86_64",
     values = {"cpu": "darwin_x86_64"},
 )
@@ -2575,6 +2584,7 @@
     external_deps = [
         "protobuf_headers",
         "protobuf",
+        "absl/status",
     ],
     language = "c++",
     public_hdrs = [
@@ -3215,6 +3225,7 @@
     external_deps = [
         "absl/strings",
         "absl/strings:str_format",
+        "absl/types:optional",
     ],
     tags = ["nofixdeps"],
     deps = [
@@ -3972,6 +3983,7 @@
         "//src/core:lib/security/security_connector/load_system_roots_supported.h",
         "//src/core:lib/security/util/json_util.h",
     ],
+    linkopts = if_windows(["-defaultlib:crypt32.lib"]) + if_mingw(["-lcrypt32"]),
     external_deps = ["absl/strings"],
     language = "c++",
     visibility = ["@grpc:public"],
@@ -4291,6 +4303,7 @@
         "protobuf_struct_upb",
         "protobuf_timestamp_upb",
         "ref_counted_ptr",
+        "server_address",
         "uri_parser",
         "work_serializer",
         "//src/core:default_event_engine",
diff -Nur a/bazel/grpc_build_system.bzl b/bazel/grpc_build_system.bzl
--- a/bazel/grpc_build_system.bzl	2024-04-25 23:05:05
+++ b/bazel/grpc_build_system.bzl	2024-05-02 10:50:24
@@ -27,8 +27,8 @@
 Contains macros used throughout the repo.
 """
 
-load("@build_bazel_rules_apple//apple:ios.bzl", "ios_unit_test")
-load("@build_bazel_rules_apple//apple/testing/default_runner:ios_test_runner.bzl", "ios_test_runner")
+# load("@build_bazel_rules_apple//apple:ios.bzl", "ios_unit_test")
+# load("@build_bazel_rules_apple//apple/testing/default_runner:ios_test_runner.bzl", "ios_test_runner")
 load("@com_google_protobuf//bazel:upb_proto_library.bzl", "upb_proto_library", "upb_proto_reflection_library")
 load("//bazel:cc_grpc_library.bzl", "cc_grpc_library")
 load("//bazel:copts.bzl", "GRPC_DEFAULT_COPTS")
@@ -41,6 +41,14 @@
 # The set of known EventEngines to test
 EVENT_ENGINES = {"default": {"tags": []}}
 
+
+def ios_unit_test(**kwargs):
+    pass
+
+def ios_test_runner(**kwargs):
+    pass
+
+
 def if_not_windows(a):
     return select({
         "//:windows": [],
@@ -55,6 +63,12 @@
         "//conditions:default": [],
     })
 
+def if_mingw(a):
+    return select({
+        "//:mingw-gcc": a,
+        "//conditions:default": [],
+    })
+
 def _get_external_deps(external_deps):
     ret = []
     for dep in external_deps:
@@ -108,7 +122,7 @@
         "grpc_opencensus_plugin": PUBLIC,
         "grpcpp_gcp_observability": PUBLIC,
         "grpc_resolver_fake": PRIVATE,
-        "grpc++_test": PRIVATE,
+        "grpc++_test": PUBLIC,
         "http": PRIVATE,
         "httpcli": PRIVATE,
         "iomgr_internal_errqueue": PRIVATE,
@@ -179,7 +193,7 @@
     copts = []
     if language.upper() == "C":
         copts = copts + if_not_windows(["-std=c11"])
-    linkopts = linkopts + if_not_windows(["-pthread"]) + if_windows(["-defaultlib:ws2_32.lib"])
+    linkopts = linkopts + if_not_windows(["-pthread"]) + if_windows(["-defaultlib:ws2_32.lib"]) +  if_mingw(["-lws2_32"])
     if select_deps:
         for select_deps_entry in select_deps:
             deps += select(select_deps_entry)
@@ -538,7 +552,7 @@
     test_args = {
         "data": data,
         "copts": GRPC_DEFAULT_COPTS + copts,
-        "linkopts": if_not_windows(["-pthread"]) + if_windows(["-defaultlib:ws2_32.lib"]),
+        "linkopts": if_not_windows(["-pthread"]) + if_windows(["-defaultlib:ws2_32.lib"]) + if_mingw(["-lws2_32"]),
         "size": size,
         "timeout": timeout,
         "exec_compatible_with": exec_compatible_with,
