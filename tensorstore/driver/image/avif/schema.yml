$schema: http://json-schema.org/draft-07/schema#
$id: driver/avif
allOf:
  - $ref: TensorStore
  - type: object
    properties:
      driver:
        const: avif
      dtype:
        const: uint8
        description: |
          Optional.  If specified, must be :json:`"uint8"`.
      kvstore:
        $ref: KvStore
        description: |-
          Specifies the underlying storage mechanism.
      cache_pool:
        $ref: ContextResource
        description: |-
          Specifies or references a previously defined `Context.cache_pool`.  It
          is normally more convenient to specify a default `~Context.cache_pool`
          in the `.context`.
        default: cache_pool
      data_copy_concurrency:
        $ref: ContextResource
        description: |-
          Specifies or references a previously defined
          `Context.data_copy_concurrency`.  It is normally more
          convenient to specify a default `~Context.data_copy_concurrency` in
          the `.context`.
        default: data_copy_concurrency
      quantizer:
        type: number
        default: "0"
        description: |
          Unused. AVIF quantization. Lower values are higher quality.
      speed:
        type: number
        default: "6"
        description: |
          Unused. AVIF speed setting.
    required:
      - kvstore
examples:
  - driver: avif
    "kvstore": "gs://my-bucket/path-to-image.avif"
definitions:
  url:
    $id: TensorStoreUrl/avif
    type: string
    allOf:
      - $ref: TensorStoreUrl
      - type: string
    title: |
      :literal:`avif:` TensorStore URL scheme
    description: |
      AVIF TensorStores may be specified using the :file:`avif:`
      URL syntax.

      .. admonition:: Examples
         :class: example

         .. list-table::
            :header-rows: 1
            :widths: auto

            * - URL representation
              - JSON representation
            * - ``"gs://my-bucket/path-to-image.avif/|avif:"``
              - .. code-block:: json

                   {"driver": "avif",
                    "kvstore": {"driver": "gcs",
                                "bucket": "my-bucket",
                                "path": "path-to-image.avif"}
                   }
